
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMPARISON ELSE EQUALS FOR ID IF LBRACE LPAREN NUMBER RBRACE RPAREN SEMICOLON WHILEprogram : statement\n               | program statementstatement : if_statement\n                | for_statement\n                | while_statement\n                | simple_statementif_statement : IF LPAREN condition RPAREN LBRACE program RBRACE\n                   | IF LPAREN condition RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEfor_statement : FOR LPAREN simple_statement condition SEMICOLON ID RPAREN LBRACE program RBRACEwhile_statement : WHILE LPAREN condition RPAREN LBRACE program RBRACEsimple_statement : ID EQUALS NUMBER SEMICOLONcondition : ID COMPARISON NUMBER'
    
_lr_action_items = {'IF':([0,1,2,3,4,5,6,11,24,26,29,30,32,33,35,37,38,39,40,41,42,],[7,7,-1,-3,-4,-5,-6,-2,-11,7,7,7,7,-7,-10,7,7,7,7,-9,-8,]),'FOR':([0,1,2,3,4,5,6,11,24,26,29,30,32,33,35,37,38,39,40,41,42,],[8,8,-1,-3,-4,-5,-6,-2,-11,8,8,8,8,-7,-10,8,8,8,8,-9,-8,]),'WHILE':([0,1,2,3,4,5,6,11,24,26,29,30,32,33,35,37,38,39,40,41,42,],[10,10,-1,-3,-4,-5,-6,-2,-11,10,10,10,10,-7,-10,10,10,10,10,-9,-8,]),'ID':([0,1,2,3,4,5,6,11,12,13,15,18,24,26,28,29,30,32,33,35,37,38,39,40,41,42,],[9,9,-1,-3,-4,-5,-6,-2,17,9,17,17,-11,9,31,9,9,9,-7,-10,9,9,9,9,-9,-8,]),'$end':([1,2,3,4,5,6,11,24,33,35,41,42,],[0,-1,-3,-4,-5,-6,-2,-11,-7,-10,-9,-8,]),'RBRACE':([2,3,4,5,6,11,24,30,32,33,35,39,40,41,42,],[-1,-3,-4,-5,-6,-2,-11,33,35,-7,-10,41,42,-9,-8,]),'LPAREN':([7,8,10,],[12,13,15,]),'EQUALS':([9,],[14,]),'NUMBER':([14,22,],[19,27,]),'RPAREN':([16,20,27,31,],[21,25,-12,34,]),'COMPARISON':([17,],[22,]),'SEMICOLON':([19,23,27,],[24,28,-12,]),'LBRACE':([21,25,34,36,],[26,29,37,38,]),'ELSE':([33,],[36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,26,29,37,38,],[1,30,32,39,40,]),'statement':([0,1,26,29,30,32,37,38,39,40,],[2,11,2,2,11,11,2,2,11,11,]),'if_statement':([0,1,26,29,30,32,37,38,39,40,],[3,3,3,3,3,3,3,3,3,3,]),'for_statement':([0,1,26,29,30,32,37,38,39,40,],[4,4,4,4,4,4,4,4,4,4,]),'while_statement':([0,1,26,29,30,32,37,38,39,40,],[5,5,5,5,5,5,5,5,5,5,]),'simple_statement':([0,1,13,26,29,30,32,37,38,39,40,],[6,6,18,6,6,6,6,6,6,6,6,]),'condition':([12,15,18,],[16,20,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','if1.py',51),
  ('program -> program statement','program',2,'p_program','if1.py',52),
  ('statement -> if_statement','statement',1,'p_statement','if1.py',59),
  ('statement -> for_statement','statement',1,'p_statement','if1.py',60),
  ('statement -> while_statement','statement',1,'p_statement','if1.py',61),
  ('statement -> simple_statement','statement',1,'p_statement','if1.py',62),
  ('if_statement -> IF LPAREN condition RPAREN LBRACE program RBRACE','if_statement',7,'p_if_statement','if1.py',66),
  ('if_statement -> IF LPAREN condition RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','if_statement',11,'p_if_statement','if1.py',67),
  ('for_statement -> FOR LPAREN simple_statement condition SEMICOLON ID RPAREN LBRACE program RBRACE','for_statement',10,'p_for_statement','if1.py',74),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE program RBRACE','while_statement',7,'p_while_statement','if1.py',78),
  ('simple_statement -> ID EQUALS NUMBER SEMICOLON','simple_statement',4,'p_simple_statement','if1.py',82),
  ('condition -> ID COMPARISON NUMBER','condition',3,'p_condition','if1.py',86),
]
